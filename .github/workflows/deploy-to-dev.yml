name: Deploy to dev (Gentle Pond)

on:
  push:
    branches:
      - main
      - dev
  # pull_request:
  #   types: [closed]
  #   branches:
  #     - dev

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x' # set this to the dotnet version to use

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy App
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'  # Specify the Node.js version you are using
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build

      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          app_location: "/dist" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "build" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######

  publish_function_apps:
    runs-on: windows-latest
    permissions:
      id-token: write # This is required for requesting the JWT

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.x # Specify your .NET version
          
      - name: Check if NuGet source exists and remove it
        shell: pwsh
        run: |
          $sourceExists = dotnet nuget list source | Select-String "GitHubPackages"
          if ($sourceExists) {
            Write-Host "NuGet source 'GitHubPackages' exists. Removing..."
            dotnet nuget remove source GitHubPackages
          } else {
            Write-Host "NuGet source 'GitHubPackages' does not exist. Skipping removal."
          }

      - name: Authenticate with GitHub Packages
        run: dotnet nuget add source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --name GitHubPackages --username ${{ github.repository_owner }} --password ${{ secrets.PAT_TOKEN }} --store-password-in-clear-text

      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: bash
        run: |
          # Restore and Build
          dotnet restore "./API/API.csproj"
          dotnet build "./API/API.csproj" --configuration Release --output ./output

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_77AAFB88059B4EFCBCCA4C04CAAB5770 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_BC8EF28681D84994B6B4A8688F4B99E7 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_398B8B6298CE4D9AA7FF603C22EE8F77 }}

      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'tablebooking-functionapp-dev'
          slot-name: 'Production'
          package: './output'
  

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: "close"

